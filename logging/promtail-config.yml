server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs (excluding frontend)
  - job_name: docker-containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-containers
          __path__: /var/lib/docker/containers/*/*log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: (?P<container_name>(?:[^|]*))\|
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
      - match:
          selector: '{container_name=~".*frontend.*"}'
          action: drop  # Исключить логи фронтенда
      - output:
          source: output

  # Application logs from stdout (excluding frontend)
  - job_name: application-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging']
        target_label: 'logging'
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            message: message
            user_id: user_id
            request_id: request_id
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
          service:
          user_id:
          request_id:
      - match:
          selector: '{service=~".*frontend.*"}'
          action: drop  # Исключить логи фронтенда
      - output:
          source: message

  # Caddy access logs
  - job_name: caddy-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: caddy-access
          service: caddy
          __path__: /var/log/caddy/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) \S+ \S+ \[(?P<timestamp>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<size>\d+) "(?P<referer>[^"]*)" "(?P<user_agent>[^"]*)"'
      - timestamp:
          format: 02/Jan/2006:15:04:05 -0700
          source: timestamp
      - labels:
          method:
          path:
          status:
          remote_addr:
      - output:
          source: message

  # Caddy error logs
  - job_name: caddy-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: caddy-error
          service: caddy
          level: error
          __path__: /var/log/caddy/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<message>.*)'
      - timestamp:
          format: 2006/01/02 15:04:05
          source: timestamp
      - labels:
          level:
      - output:
          source: message

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: redis
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d+:\w+ \d+ \d{2}:\d{2}:\d{2}.\d+) \S+ (?P<level>\w+) (?P<message>.*)'
      - labels:
          level:
      - output:
          source: message

  # PostgreSQL logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: postgresql
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d+ \w+) \[(?P<pid>\d+)\] (?P<level>\w+):\s*(?P<message>.*)'
      - timestamp:
          format: 2006-01-02 15:04:05.000 MST
          source: timestamp
      - labels:
          level:
          pid:
      - output:
          source: message

  # Docker daemon logs
  - job_name: docker-daemon
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-daemon
          service: docker
          __path__: /var/log/docker.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+Z) (?P<level>\w+) (?P<message>.*)'
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
      - output:
          source: message

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+)(?:\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - timestamp:
          format: Jan 2 15:04:05
          source: timestamp
      - labels:
          hostname:
          service:
          pid:
      - output:
          source: message

  # Kernel logs
  - job_name: kernel
    static_configs:
      - targets:
          - localhost
        labels:
          job: kernel
          service: kernel
          __path__: /var/log/kern.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) kernel: (?P<message>.*)'
      - timestamp:
          format: Jan 2 15:04:05
          source: timestamp
      - labels:
          hostname:
      - output:
          source: message

  # Application logs from specific directories
  - job_name: app-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: app-logs
          service: application
          __path__: /var/log/app/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            message: message
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
          service:
      - output:
          source: message
