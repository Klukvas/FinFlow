name: Cleanup and Maintenance

on:
  schedule:
    # Run every Sunday at 1 AM UTC
    - cron: '0 1 * * 0'
  workflow_dispatch:

jobs:
  cleanup-artifacts:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const daysToKeep = 30;
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - daysToKeep);
            
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            let deleted = 0;
            for (const artifact of artifacts.data.artifacts) {
              const createdAt = new Date(artifact.created_at);
              if (createdAt < cutoffDate) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                deleted++;
                console.log(`Deleted artifact: ${artifact.name}`);
              }
            }
            console.log(`Deleted ${deleted} old artifacts`);

  cleanup-workflow-runs:
    name: Cleanup Old Workflow Runs
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup old workflow runs
        uses: actions/github-script@v7
        with:
          script: |
            const daysToKeep = 90;
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - daysToKeep);
            
            const workflows = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            let deleted = 0;
            for (const workflow of workflows.data.workflows) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow.id,
                per_page: 100
              });
              
              for (const run of runs.data.workflow_runs) {
                const createdAt = new Date(run.created_at);
                if (createdAt < cutoffDate && run.status === 'completed') {
                  try {
                    await github.rest.actions.deleteWorkflowRun({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      run_id: run.id
                    });
                    deleted++;
                  } catch (error) {
                    console.log(`Could not delete run ${run.id}: ${error.message}`);
                  }
                }
              }
            }
            console.log(`Deleted ${deleted} old workflow runs`);

  cleanup-docker-images:
    name: Cleanup Old Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.HZ_SSH_KEY }}

      - name: Cleanup old images on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.HZ_USER || 'root' }}@${{ secrets.HZ_HOST }} bash -s <<'EOF'
          set -euo pipefail
          cd ~/app
          
          echo "Pruning unused Docker images..."
          docker image prune -a -f --filter "until=168h"
          
          echo "Pruning unused volumes..."
          docker volume prune -f --filter "label!=keep"
          
          echo "Pruning unused networks..."
          docker network prune -f
          
          echo "Docker disk usage:"
          docker system df
          EOF

